{"version":3,"sources":["data.js","components/Logo.js","components/Sidebar.js","components/ActionButtons.js","components/Utils.js","components/Account.js","components/MainContent.js","components/Notif.js","components/CreateAccountPage.js","components/TransferPage.js","components/TransactPage.js","components/Dashboard.js","components/LoginPage.js","components/MainClientContent.js","components/BudgetApp.js","components/ClientDashboard.js","components/Authenticate.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","email","password","fullname","type","number","balance","isAdmin","transactions","budget","title","amount","date","Logo","id","Sidebar","props","user","logoutHandler","changePage","page","menu","ClientMenu","onClickHandler","active","icon","text","SideMenu","SideLink","onClick","event","preventDefault","className","href","ActionButtons","editingUser","setEditingUser","index","setEditModal","setDeleteUser","actionType","ActionButton","e","click","formatNumber","toLocaleString","undefined","maximumFractionDigits","trim","parseFloat","replace","findAccount","users","JSON","parse","localStorage","getItem","transact","setUsers","multiplier","unshift","getDateToday","setItem","stringify","capitalize","str","charAt","toUpperCase","slice","saveBudgetToDB","accountNumber","newBudget","filteredUsers","filter","dbUser","push","addUserToUsers","transDate","Date","month","getDay","getFullYear","Account","action","AccountHolder","AccountType","AccountNumber","AccountBalance","MainContent","useState","isCurrentUserAdmin","setIsCurrentUserAdmin","useEffect","localUser","bankAccounts","map","Notif","style","message","CreateAccountPage","createRandomAccount","Math","floor","random","notif","setNotif","initialBalance","setInitialBalance","initialAccountNumber","setInitialAccountNumber","onSubmit","target","elements","isSaved","emptyInputs","Object","values","input","localUsers","alreadyExists","forEach","row","length","createNewAccount","value","accountType","htmlFor","autoComplete","name","disabled","onChange","TransferPage","isClient","client","setClient","receivers","setReceivers","sender","setSender","receiver","setReceiver","transferAmount","setTransferAmount","senders","newReceivers","senderField","newUsers","senderSuccess","console","log","transfer","TransactPage","accounts","setAccounts","selectedAccount","setSelectedAccount","depositAmount","setDepositAmount","options","account","selectedNumber","Dashboard","setPage","deleteUser","editModal","isUpdate","setIsUpdate","newAccount","setNewAccount","changePageHandler","pageName","modal","accountName","AccountEditModal","setAccount","LoginPage","username","setUsername","setPassword","loginHandler","MainClientContent","transaction","BudgetApp","budgetList","setBudgetList","isModalOpen","setIsModalOpen","modalValue","setModalValue","modalAction","setModalAction","getTotalExpenses","reduce","prev","curr","totalExpenses","currentBalance","setCurrentBalance","editRow","saveBudget","newBudgetList","updateBudget","total","item","filteredBudget","budgetIndex","deleteRow","class","BudgetModal","defaultValue","ClientDashboard","logout","currentUser","Authenticate","isLoggedIn","setIsLoggedIn","setIsAdmin","clients","removeItem","isFound","isLoginSuccess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6f7d62e.chunk.js","sourcesContent":["const DATA = [\r\n  {\r\n    email: 'admin@admin.com',\r\n    password: 'abc123',\r\n    fullname: 'Admin Account',\r\n    type: 'Savings ',\r\n    number: '47290539480',\r\n    balance: 1000,\r\n    isAdmin: true,\r\n    transactions: [],\r\n  },\r\n  {\r\n    email: 'smael1@gmail.com',\r\n    password: 'abc123',\r\n    fullname: 'smail deprox',\r\n    type: 'Savings ',\r\n    number: '47290539481',\r\n    balance: 1029300.43,\r\n    isAdmin: true,\r\n    transactions: [],\r\n  },\r\n  {\r\n    email: 'smtest@gmail.com',\r\n    password: 'abc123',\r\n    fullname: 'smael smtest',\r\n    type: 'Savings ',\r\n    number: '47290539482',\r\n    balance: 392830.22,\r\n    isAdmin: false,\r\n    budget: [\r\n      {\r\n        title: 'Tuition fee',\r\n        amount: 12000,\r\n      },\r\n      {\r\n        title: 'Food take out during the pandemic',\r\n        amount: 4000,\r\n      },\r\n    ],\r\n    transactions: [\r\n      {\r\n        title: 'Fund transfer',\r\n        amount: 2000,\r\n        type: 'debit',\r\n        date: 'October 1, 2021',\r\n      },\r\n      {\r\n        title: 'Withdraw',\r\n        amount: 10000,\r\n        type: 'debit',\r\n        date: 'October 1, 2021',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    email: 'user24@gmail.com',\r\n    password: 'abc123',\r\n    fullname: 'abdo simo',\r\n    type: 'Savings ',\r\n    number: '47290539483',\r\n    balance: 102938.34,\r\n    isAdmin: false,\r\n    transactions: [],\r\n  },\r\n  {\r\n    email: 'user34@gmail.com',\r\n    password: 'abc123',\r\n    fullname: 'Jack Smith',\r\n    type: 'Checking ',\r\n    number: '47290539484',\r\n    balance: 837495.38,\r\n    isAdmin: false,\r\n    transactions: [],\r\n  },\r\n\r\n  {\r\n    email: 'derek@gmail.com',\r\n    password: 'abc123',\r\n    fullname: 'Rito Vilanova',\r\n    type: 'Checking ',\r\n    number: '47290539485',\r\n    balance: 574839.58,\r\n    isAdmin: false,\r\n    transactions: [],\r\n  },\r\n  {\r\n    email: 'client@client.com',\r\n    password: 'abc123',\r\n    fullname: 'Client Demo Account',\r\n    type: 'Savings ',\r\n    number: '47290539486',\r\n    balance: 1000,\r\n    isAdmin: false,\r\n    transactions: [],\r\n  },\r\n];\r\n\r\nexport default DATA;\r\n","import React from 'react';\r\n\r\nexport const Logo = () => {\r\n  return <h1 id=\"logo\">Smael Bank</h1>;\r\n};\r\n","import React from 'react';\r\nimport { Logo } from './Logo';\r\n\r\nexport const Sidebar = (props) => {\r\n    const { user, logoutHandler, changePage, page } = props;\r\n    let menu = null;\r\n\r\n    // not regular user but an admin\r\n    if(!user) {\r\n        menu = <SideMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />;\r\n    }\r\n\r\n    // regular user\r\n    if(user) {\r\n        menu = <ClientMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />\r\n    }\r\n\r\n    return(\r\n        <section id=\"side-menu\">\r\n            <Logo />\r\n            {menu}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const ClientMenu = (props) => {\r\n    const {changePage, logoutHandler, page} = props;\r\n\r\n    return (\r\n        <ul>\r\n            <SideLink onClickHandler={changePage} active={page} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"budget\" icon=\"bx bx-money\" text=\"Budget App\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\r\n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\r\n        </ul>\r\n    )\r\n}\r\n  \r\nexport const SideMenu = (props) => {\r\n    const {changePage, logoutHandler, page} = props;\r\n    return (\r\n        <ul>\r\n            <SideLink onClickHandler={changePage} active={page} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"create-account\" icon=\"bx bx-user-pin\" text=\"Create Account\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"deposit\" icon=\"bx bx-money\" text=\"Deposit\" />\r\n            <SideLink onClickHandler={changePage} active={page} page=\"withdraw\" icon=\"bx bx-log-out-circle\" text=\"Withdraw\" />\r\n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\r\n        </ul>\r\n    )\r\n}\r\n  \r\nexport const SideLink = (props) => {\r\n    const {icon, text, page, active} = props;\r\n    \r\n    function clickLink(event) {\r\n        if(page) {\r\n            event.preventDefault();\r\n            props.onClickHandler(page);\r\n        } else {\r\n            event.preventDefault();\r\n            props.onClickHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li><a onClick={clickLink} className={ active === page ? 'active' : '' } href=\"#\"><i className={icon} ></i> {text}</a></li>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ActionButtons = (props) => {\r\n    const {editingUser, setEditingUser, index, setEditModal, setDeleteUser} = props;\r\n\r\n    return (\r\n      <div id=\"actions\">\r\n        <ActionButton \r\n          icon=\"bx bx-edit\" \r\n          text=\"Edit\" \r\n          index={index} \r\n          actionType=\"edit\"\r\n          editingUser={editingUser} \r\n          actionType='edit' \r\n          setEditingUser={setEditingUser} setEditModal={setEditModal} />\r\n\r\n        <ActionButton \r\n          icon=\"bx bxs-x-square\"  \r\n          index={index} \r\n          actionType='delete'\r\n          text=\"Delete\" editingUser={editingUser} \r\n          setDeleteUser={setDeleteUser} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport const ActionButton = (props) => {\r\n    const {icon, text, editingUser, actionType, setEditingUser, index, setEditModal, setDeleteUser} = props;\r\n\r\n    const click = (e, index) => {\r\n      e.preventDefault();\r\n      \r\n      if(actionType === 'edit') {\r\n        setEditingUser(index);\r\n        setEditModal(true);\r\n      }\r\n\r\n      if(actionType === 'delete') {\r\n        setDeleteUser(index);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <button onClick={(e) => click(e, index)}><i className={icon} ></i> {text}</button>\r\n    )\r\n  }\r\n","export function formatNumber(number) \r\n{\r\n    return number.toLocaleString(undefined, {maximumFractionDigits: 2});\r\n}\r\n\r\nexport function trim(number) {\r\n    return parseFloat(number.replace(/,/g, '')) || 0;\r\n}\r\n\r\nexport function findAccount(number) {\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n\r\n    for(const user of users) {\r\n        if(user.number === number) {\r\n            return user;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function transact(number, amount, type, setUsers=null)\r\n{\r\n    let multiplier = 1;\r\n    if(type === 'add' || type === 'credit') multiplier = 1;\r\n    if(type === 'subtract' || type === 'debit') multiplier = -1;\r\n\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n    \r\n    for(const user of users) {\r\n        if(user.number === number) {\r\n            user.balance += amount * multiplier;\r\n\r\n            if(type === 'add' || type === 'credit') {\r\n                user.transactions.unshift({\r\n                    title: `Deposit`, \r\n                    amount: amount, \r\n                    type: \"credit\", \r\n                    date: getDateToday()\r\n                })\r\n            }\r\n\r\n            if(type === 'subtract' || type === 'debit') {\r\n                user.transactions.unshift({\r\n                    title: `Withdraw`, \r\n                    amount: amount, \r\n                    type: \"debit\", \r\n                    date: getDateToday()\r\n                })\r\n            }\r\n        }\r\n    }\r\n    setUsers(users);\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n}\r\n\r\nexport function capitalize(str) \r\n{\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport function saveBudgetToDB(accountNumber, newBudget) \r\n{\r\n    const user = findAccount(accountNumber);\r\n    user.budget = newBudget;\r\n    const filteredUsers = addUserToUsers(user);\r\n    localStorage.setItem('users', JSON.stringify(filteredUsers));\r\n}\r\n\r\n\r\n\r\nfunction addUserToUsers(user) {\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n\r\n    const filteredUsers = users.filter(dbUser => {\r\n        return dbUser.number !== user.number;\r\n    });\r\n\r\n    filteredUsers.push(user);\r\n    return filteredUsers;\r\n}\r\n\r\nexport function getDateToday() {\r\n    const transDate = new Date();\r\n    return `${transDate.toLocaleString(\"en-us\", { month: \"long\" })} ${transDate.getDay()}, ${transDate.getFullYear()}`;\r\n}\r\n","import React from \"react\";\r\nimport { ActionButtons } from \"./ActionButtons\";\r\nimport { formatNumber } from \"./Utils\";\r\n\r\nexport const Account = (props) => {\r\n    \r\n    const {type, accountNumber, balance, fullname, editingUser, setEditingUser, setDeleteUser, index, isAdmin, setEditModal} = props;\r\n    \r\n    const action = isAdmin ? <ActionButtons index={index} \r\n      editingUser={editingUser} \r\n      setEditingUser={setEditingUser} \r\n      setEditModal={setEditModal} setDeleteUser={setDeleteUser} /> : '';\r\n    \r\n    return (\r\n      <div className=\"account\">\r\n          <div className=\"details\">\r\n              <AccountHolder fullname={fullname} />\r\n              <AccountType type={type} />\r\n              <AccountNumber accountNumber={accountNumber} />\r\n              {action}\r\n          </div>\r\n          <AccountBalance balance={formatNumber(balance)} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport const AccountHolder = (props) => {\r\n    return (\r\n      <h1>{props.fullname}</h1>\r\n    )\r\n  }\r\n  \r\n  \r\nexport const AccountType = (props) => {\r\n    return (\r\n      <h3>{props.type}</h3>\r\n    )\r\n  }\r\n  \r\n  \r\nexport const AccountNumber = (props) => {\r\n    return (\r\n      <div>{props.accountNumber}</div>\r\n    )\r\n  }\r\n  \r\n  \r\nexport const AccountBalance = (props) => {\r\n    const balance = props.balance;\r\n    return (\r\n      <div className=\"balance\">{balance}</div>\r\n    )\r\n  }\r\n\r\n","import { Account } from \"./Account\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const MainContent = (props) => {\r\n    const users = props.users;\r\n    const {editingUser, setEditingUser, setEditModal, setDeleteUser} = props;\r\n    const [isCurrentUserAdmin, setIsCurrentUserAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n      const localUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      setIsCurrentUserAdmin(localUser.isAdmin);\r\n    }, [isCurrentUserAdmin]);\r\n    \r\n    const bankAccounts = users.map((user, index) => {\r\n      return <Account key={index} index={index} fullname={user.fullname} \r\n        type={user.type} \r\n        isAdmin={isCurrentUserAdmin} \r\n        accountNumber={user.number} \r\n        balance={user.balance} \r\n        editingUser={editingUser} \r\n        setEditingUser={setEditingUser} setEditModal={setEditModal} \r\n        setDeleteUser={setDeleteUser} />\r\n    });\r\n      \r\n    return (\r\n      <section id=\"main-content\">\r\n        {bankAccounts}\r\n      </section>\r\n    )\r\n    \r\n  }\r\n\r\n","export const Notif = (props) => {\r\n    return <div className={`notif ${props.style}`}>{props.message}</div>\r\n}\r\n","import { useState } from \"react\";\r\nimport { Notif } from \"./Notif\";\r\nimport {formatNumber, trim} from './Utils';\r\n\r\nexport const CreateAccountPage = (props) => {\r\n    const createRandomAccount = () => {\r\n        return Math.floor(1000000000 + Math.random() * 9000000000);\r\n    }\r\n    \r\n    const [notif, setNotif] = useState({message: 'Create a new client account.', style: 'left'});\r\n    const [initialBalance, setInitialBalance] = useState(0);\r\n    const [initialAccountNumber, setInitialAccountNumber] = useState(createRandomAccount());\r\n\r\n    const createNewAccount = (user) => {\r\n\r\n        const emptyInputs = Object.values(user).filter(input => {\r\n            return input === ''\r\n        });\r\n\r\n        const localUsers = props.users;\r\n\r\n        let alreadyExists = false;\r\n        localUsers.forEach(row => {\r\n            if(row.email === user.email) {\r\n                alreadyExists = true;\r\n            }\r\n        });\r\n\r\n        if(alreadyExists) {\r\n            setNotif({message: 'This email already exists. Try again.', style: 'danger'});\r\n            return false;\r\n        } else if(emptyInputs.length > 0) {\r\n            setNotif({message: 'All fields are required.', style: 'danger'});\r\n            return false;\r\n        } else {\r\n            setNotif('');\r\n            localUsers.unshift(user);\r\n            props.setUsers(localUsers); \r\n            localStorage.setItem('users', JSON.stringify(localUsers));\r\n            setNotif({message: 'Successfully saved.', style: 'success'});\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleCreateAccount = (event) => {\r\n        event.preventDefault();\r\n        const user = event.target.elements;\r\n\r\n        const account = {\r\n            email: user.email.value,\r\n            password: user.password.value,\r\n            fullname: user.fullname.value,\r\n            type: user.accountType.value,\r\n            number: user.accountNumber.value,\r\n            isAdmin: false,\r\n            balance: trim(user.initialBalance.value), \r\n            transactions: []\r\n        }\r\n\r\n        const isSaved = createNewAccount(account);\r\n        if(isSaved) {\r\n            user.email.value = '';\r\n            user.password.value = '';\r\n            user.fullname.value = ''; \r\n            user.accountNumber.value = setInitialAccountNumber(createRandomAccount());\r\n            user.initialBalance.value = setInitialBalance(0);\r\n        }\r\n    }\r\n\r\n    const onInitialBalance = event => {\r\n        const amount = trim(event.target.value) || 0;\r\n        setInitialBalance(amount);\r\n    }\r\n\r\n    return (\r\n        <section id=\"main-content\">\r\n            <form id=\"form\" onSubmit={handleCreateAccount}>\r\n                <h1>Create Account</h1>\r\n                <Notif message={notif.message} style={notif.style} />\r\n                <label htmlFor=\"fullname\">Full name</label>\r\n                <input id=\"fullname\" type=\"text\" autoComplete=\"off\" name=\"fullname\" />\r\n                <hr />\r\n                <label htmlFor=\"account-number\">Account # (Randomly Generated)</label>\r\n                <input id=\"account-number\" name=\"accountNumber\" className=\"right\" value={initialAccountNumber} type=\"number\" disabled />\r\n\r\n                <label htmlFor=\"balance\">Initial balance</label>\r\n                <input id=\"balance\" type=\"text\" value={formatNumber(initialBalance)} onChange={onInitialBalance} name=\"initialBalance\" className=\"right\" />\r\n\r\n                <label htmlFor=\"account-type\">Account Type</label>\r\n                <select name=\"accountType\">\r\n                    <option value=\"Checking Account\">Checking Account</option>\r\n                    <option value=\"Savings Accounts\">Savings Account</option>\r\n                </select>\r\n                <hr />\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input id=\"email\" type=\"email\" name=\"email\" />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id=\"password\" type=\"password\" name=\"password\" />\r\n                <input value=\"Create Account\" className=\"btn\" type=\"submit\" />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Notif } from \"./Notif\";\r\nimport { formatNumber, getDateToday } from \"./Utils\";\r\n\r\nexport const TransferPage = (props) => {\r\n    const {isClient, client, setClient} = props;\r\n    const [users, setUsers] = useState(props.users); \r\n    const [receivers, setReceivers] = useState(users);\r\n    const [sender, setSender] = useState( isClient ? client : {balance: 0});\r\n    const [receiver, setReceiver] = useState({balance: 0});\r\n    const [notif, setNotif] = useState({message: 'Transfer money from one account to another.', style: 'left'});\r\n    const [transferAmount, setTransferAmount] = useState(0);\r\n\r\n    const senderSelected = (event) => {\r\n        const accountNumber = event.target.value;\r\n\r\n        let sender = null; \r\n\r\n        users.forEach(user => {\r\n            if(user.number === accountNumber) {\r\n                sender = user;        \r\n            }\r\n        })\r\n\r\n        const newUsers = users.filter((user, index) => {\r\n            return user.number !== accountNumber;\r\n        });\r\n\r\n        setSender(sender);\r\n        setReceivers(newUsers);\r\n        setReceiver({number: 0, balance: 0});\r\n    }\r\n\r\n    const receiverSelected = event => {\r\n        const accountNumber = event.target.value;\r\n\r\n        let receiver = null;\r\n\r\n        users.forEach(user => {\r\n            if(user.number === accountNumber) {\r\n                receiver = user;\r\n            }\r\n        })\r\n\r\n        setReceiver(receiver);\r\n    }\r\n\r\n    let senders = null;\r\n    if(!isClient) {\r\n        senders = users.map(user => {\r\n            return (\r\n                <option value={user.number}>{user.fullname} #{user.number}</option>\r\n            )\r\n        });\r\n    }\r\n\r\n    const newReceivers = receivers.map(receiver => {\r\n        if(sender.number !== receiver.number) {\r\n            return (\r\n                <option value={receiver.number}>{receiver.fullname} #{receiver.number}</option>\r\n            )\r\n        }\r\n        \r\n    })\r\n\r\n    const transferFund = event => {\r\n        event.preventDefault();\r\n        const amount = parseFloat(event.target.elements.amount.value.replace(/,/g, ''));\r\n        if(amount <= 0) return false;\r\n\r\n        // get localstorage users\r\n        const users = JSON.parse(localStorage.getItem('users'));\r\n\r\n        if(sender.number !== 0 && receiver.number !== 0 && receiver.number) {\r\n            // deduct from sender\r\n            let senderSuccess = false;\r\n            users.forEach(user => {\r\n                if(user.number === sender.number) {\r\n                    if(user.balance - amount >= 0) {\r\n                        user.balance -= amount;\r\n\r\n                        const transDate = new Date();\r\n                        console.log(user.transactions);\r\n                        user.transactions.unshift({\r\n                            title: `Fund transfer to ${receiver.fullname} #${receiver.number}`, \r\n                            amount: amount, \r\n                            type: \"debit\", \r\n                            date: getDateToday()\r\n                        });\r\n\r\n                        setSender(user);\r\n                        senderSuccess = true;\r\n                        \r\n                    }\r\n                }\r\n            });\r\n\r\n            // add to receiver \r\n            if(senderSuccess) {\r\n                users.forEach(user => {\r\n                    if(user.number === receiver.number) {\r\n                        user.balance += amount;\r\n                        \r\n                        user.transactions.unshift({\r\n                            title: `Fund transfer from ${sender.fullname} #${receiver.number}`, \r\n                            amount: amount, \r\n                            type: \"credit\", \r\n                            date: getDateToday()\r\n                        });\r\n\r\n                        setReceiver(user);\r\n                    }\r\n                });\r\n\r\n                setNotif({ message: 'Successful transfer.', style: 'success' });\r\n                setUsers(users);\r\n                props.setUsers(users);\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n                setTransferAmount(0);\r\n            } \r\n            else {\r\n                setNotif({message: 'Transfer failed.', style: 'danger'});\r\n            }\r\n        }\r\n        else {\r\n            setNotif({message: 'Incomplete information. Missing sender or receiver.', style: 'danger' });\r\n        }\r\n    }\r\n\r\n    const onTransfer = (e) => {\r\n        const transfer = parseFloat(e.target.value.replace(/,/g, '')) || 0;\r\n        setTransferAmount(transfer);\r\n    }\r\n\r\n    let senderField = \r\n        <select onChange={senderSelected} name=\"sender\">\r\n            <option>Select Sender</option>\r\n            {senders}\r\n        </select>;\r\n    \r\n    if(isClient) {\r\n        senderField = <input type=\"text\" name=\"sender\" value={`${client.fullname} #${client.number}`} disabled />\r\n    }\r\n\r\n    return (\r\n        <section id=\"main-content\">\r\n            <form id=\"form\" onSubmit={transferFund}>\r\n                <h1>Fund Transfer</h1>\r\n                \r\n                <Notif message={notif.message} style={notif.style} />\r\n                <h2>Sender</h2>\r\n                <label>From (Sender)</label>\r\n                {senderField}\r\n\r\n                <label>Current balance</label>\r\n                <input type=\"text\" className=\"right\" value={formatNumber(sender.balance)} disabled />\r\n\r\n                <label>Amount to Transfer</label>\r\n                <input type=\"text\" name=\"amount\" value={formatNumber(transferAmount)} onChange={onTransfer} autoComplete=\"off\" className=\"right big-input\" />\r\n\r\n                <div className=\"transfer-icon\"><i className='bx bx-down-arrow-alt'></i></div>\r\n                <h2>Receiver</h2>\r\n                <label>To (Receiver)</label>\r\n                <select value={receiver.number || 0} onChange={receiverSelected} name=\"receiver\">\r\n                    <option>Select Receiver</option>\r\n                    {newReceivers}\r\n                </select>\r\n                <label>Current balance</label>\r\n                <input type=\"text\" className=\"right\" value={formatNumber(receiver.balance)} disabled />\r\n                <input type=\"submit\" className=\"btn\" value=\"Transfer Fund\" />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Notif } from \"./Notif\";\r\nimport { formatNumber, findAccount, transact, trim, capitalize } from \"./Utils\";\r\n\r\nexport const TransactPage = (props) => {\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n    const setNotif = props.setNotif;\r\n    const notif = props.notif;\r\n    const [accounts, setAccounts] = useState(users);\r\n    const [selectedAccount, setSelectedAccount] = useState({balance: 0});\r\n    const [depositAmount, setDepositAmount] = useState(0);\r\n\r\n    const options = accounts.map(user => {\r\n        return <option value={user.number}>{user.fullname} #{user.number}</option>\r\n    });\r\n\r\n    const displayBalance = (e) => {\r\n        setNotif(notif);\r\n        const selectedNumber = e.target.value;\r\n        \r\n        for(const user of accounts) {\r\n            if(user.number === selectedNumber) {\r\n                setSelectedAccount(user);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDeposit = (e) => {\r\n        const amount = formatNumber(trim(e.target.value));\r\n        setDepositAmount(amount);\r\n    }\r\n\r\n    const processTransfer = (e) => {\r\n        e.preventDefault();\r\n        const amount = trim(e.target.elements.amount.value);\r\n        const accountNumber = e.target.elements.account.value;\r\n\r\n        if(amount > 0 && accountNumber !== \"0\") {\r\n            for(const user of accounts) {\r\n                if(user.number === accountNumber) {\r\n                    transact(user.number, amount, props.type, props.setUsers);\r\n                    setSelectedAccount(findAccount(user.number));\r\n                    setAccounts(JSON.parse(localStorage.getItem('users')));\r\n                    setDepositAmount(0);\r\n                    setNotif({message: `${capitalize(props.page)} successful.`, style: 'success'});\r\n                    break;\r\n                }\r\n            }\r\n        } \r\n        else {\r\n            setNotif({message: `${capitalize(props.page)} failed.`, style: 'danger'});\r\n        }\r\n    }\r\n    // 'bx bx-up-arrow-alt'\r\n    const icon = props.page === 'withdraw' ? 'bx bx-down-arrow-alt' : 'bx bx-up-arrow-alt';\r\n\r\n    return (\r\n        <section id=\"main-content\">\r\n            <form id=\"form\" onSubmit={processTransfer}>\r\n                <h1>{props.page}</h1>\r\n                <Notif message={notif.message} style={notif.style} />\r\n                <label>Account</label>\r\n                <select name=\"account\" onChange={displayBalance}>\r\n                    <option value=\"0\">Select Account</option>\r\n                    {options}\r\n                </select>\r\n\r\n                <label>Current balance</label>\r\n                <input type=\"text\" className=\"right\" value={formatNumber(selectedAccount.balance)} disabled />\r\n                \r\n                <div className=\"transfer-icon\"><i className={icon}></i></div>\r\n                <label>Amount to {props.page}</label>\r\n                <input type=\"text\" name=\"amount\" value={depositAmount} onChange={onDeposit} autoComplete=\"off\" className=\"right big-input\" />\r\n                <button type=\"submit\" className=\"btn\">{props.page}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { MainContent } from \"./MainContent\";\r\nimport { CreateAccountPage } from \"./CreateAccountPage\";\r\nimport { TransferPage } from \"./TransferPage\";\r\nimport { TransactPage } from \"./TransactPage\";\r\n\r\nexport const Dashboard = (props) => {\r\n    const [page, setPage] = useState('home');\r\n    const [users, setUsers] = useState(props.users);\r\n    const [notif, setNotif] = useState({message: '', style: ''});\r\n    const [editingUser, setEditingUser] = useState(null);\r\n    const [deleteUser, setDeleteUser] = useState(null);\r\n    const [editModal, setEditModal] = useState(false);\r\n    const [isUpdate, setIsUpdate] = useState(false); \r\n    const [newAccount, setNewAccount] = useState(null); \r\n\r\n    const changePageHandler = (pageName) => {\r\n        setPage(pageName);\r\n\r\n        if(pageName === 'withdraw') {\r\n            setNotif({message: 'Select an account to withdraw money from.', style: 'left'});\r\n        } \r\n\r\n        if(pageName === 'deposit') {\r\n            setNotif({message: 'Select an account to deposit money.', style: 'left'});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(deleteUser !== null) {\r\n\r\n            const filteredUsers = users.filter((user, index) => {\r\n                return index !== deleteUser\r\n            });\r\n\r\n            setUsers(filteredUsers);\r\n            setDeleteUser(null);\r\n            // save\r\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\r\n        }\r\n    }, [deleteUser]);\r\n\r\n    useEffect(() => {\r\n        if(isUpdate) {\r\n            const filteredUsers = users.map((user, index) => {\r\n                if(user.number === newAccount.number) {\r\n                    user = {...user, ...newAccount};\r\n                }\r\n                return user;\r\n            });\r\n\r\n            setUsers(filteredUsers);\r\n            setIsUpdate(false);\r\n            // save\r\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\r\n        }\r\n    }, [isUpdate]);\r\n\r\n    let modal = null;\r\n    if(editingUser !== null && editModal) {\r\n        const user = users[editingUser];\r\n        // accountName={} accountNumber={} balance={}\r\n        modal = <AccountEditModal \r\n            accountName={user.fullname} \r\n            accountNumber={user.number} \r\n            balance={user.balance} setEditModal={setEditModal} \r\n            setIsUpdate={setIsUpdate} setNewAccount={setNewAccount} setIsUpdate={setIsUpdate}  />\r\n    }\r\n\r\n    if(page === 'home') {\r\n        return (\r\n            <main>\r\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\r\n              <MainContent users={users} editingUser={editingUser} \r\n                setEditModal={setEditModal} \r\n                setEditingUser={setEditingUser} setDeleteUser={setDeleteUser} />\r\n              {modal}\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(page === 'create-account') {\r\n        return (\r\n            <main>\r\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\r\n              <CreateAccountPage users={users} setUsers={setUsers} />\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(page === 'transfer') {\r\n        return (\r\n            <main>\r\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\r\n                <TransferPage users={users} setUsers={setUsers} />\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(page === 'deposit') {\r\n        return (\r\n            <main>\r\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\r\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"add\" page={page} />\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(page === 'withdraw') {\r\n        return (\r\n            <main>\r\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\r\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"subtract\" page={page} />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst AccountEditModal = (props) => {\r\n    const { accountName, accountNumber, balance, setEditModal, setNewAccount, setIsUpdate } = props;\r\n    const [account, setAccount] = useState({fullname: accountName, number: accountNumber, balance: balance});\r\n\r\n    const closeModal = () => {\r\n        setEditModal(false);\r\n    }\r\n\r\n    const updateAccount = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Update\");\r\n        setNewAccount(account);\r\n        setIsUpdate(true);\r\n        // close modal\r\n        setEditModal(false);\r\n    }\r\n\r\n    const editAccountName = (e) => {\r\n        const name = e.target.value;\r\n        setAccount({...account, ...{fullname: name}});\r\n    }\r\n\r\n    const editAccountNumber = (e) => {\r\n        const number = e.target.value;\r\n        setAccount({...account, ...{number: number}});\r\n    }\r\n\r\n    const editAccountBalance = (e) => {\r\n        const balance = e.target.value;\r\n        setAccount({...account, ...{balance: parseFloat(balance) || 0}});\r\n    }\r\n \r\n    return (\r\n        <div className=\"overlay\">\r\n        <div className=\"modal\">\r\n            <form onSubmit={updateAccount}>\r\n                <h2 className=\"title\">Edit Account</h2>\r\n                <label>Account name</label>\r\n                <input name=\"account-name\" onChange={editAccountName} value={account.fullname} autoComplete=\"off\" />\r\n                \r\n                <label>Account number</label>\r\n                <input type=\"text\" name=\"amount\" onChange={editAccountNumber} disabled value={account.number} autoComplete=\"off\" />\r\n\r\n                <label>Balance</label>\r\n                <input type=\"text\" name=\"balance\" onChange={editAccountBalance} value={account.balance} autoComplete=\"off\" />\r\n\r\n                <button type=\"button\" onClick={() => closeModal()} className=\"btn2 btn-muted\">Cancel</button>\r\n                <button type=\"submit\" className=\"btn2\">Update Account</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Logo } from './Logo';\r\nimport { Notif } from './Notif';\r\n\r\nexport const LoginPage = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n  \r\n    const onSubmitHandler = (event) => {\r\n      event.preventDefault();\r\n      props.loginHandler(username, password);\r\n    }\r\n  \r\n    const onChangeUsername = (event) => {\r\n      setUsername(event.target.value);\r\n    }\r\n  \r\n    const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n    }\r\n  \r\n    return (\r\n      <div id=\"login-page\">\r\n        <div id=\"login\">\r\n          <Logo />\r\n          <Notif message={props.notif.message} style={props.notif.style} />\r\n          <form onSubmit={onSubmitHandler}>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input id=\"username\" autoComplete=\"off\" onChange={onChangeUsername}  value={username} type=\"text\" />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input id=\"password\" autoComplete=\"off\" onChange={onChangePassword} value={password} type=\"password\" />\r\n            <button type=\"submit\" className=\"btn\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import { Account } from './Account';\r\nimport { formatNumber } from './Utils';\r\n\r\nexport const MainClientContent = props => {\r\n    const {user} = props;\r\n    console.log(user);\r\n\r\n    const transactions = user.transactions.map((transaction, index) => {\r\n      const className = index % 2 === 0 ? 'even' : 'odd'\r\n      return <div className={`transaction-item ${className}`}>\r\n        <div>{transaction.date}</div>\r\n        <div>{transaction.title}</div>\r\n        <div>{transaction.type === 'debit' ? formatNumber(transaction.amount * -1) : formatNumber(transaction.amount)}</div>\r\n      </div>\r\n    });\r\n\r\n\r\n    return (\r\n      <section id=\"main-content\">\r\n        <h1 className=\"main\">My Account</h1>\r\n        <Account type={user.type} accountNumber={user.number} balance={user.balance} fullname={user.fullname} />\r\n        <div id=\"transactions\">\r\n          <h2>Transactions</h2>\r\n          <div id=\"transaction-div\">\r\n          {transactions}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n}\r\n","import { formatNumber, saveBudgetToDB } from \"./Utils\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const BudgetApp = (props) => {\r\n    const {client} = props;\r\n    const [budgetList, setBudgetList] = useState(client.budget || []);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalValue, setModalValue] = useState({title: '', amount: ''});\r\n    const [modalAction, setModalAction] = useState('add');\r\n\r\n    const getTotalExpenses = () => {\r\n        return budgetList.reduce((prev, curr) => {\r\n            return prev + curr.amount;\r\n        }, 0);\r\n    }\r\n\r\n    const totalExpenses = getTotalExpenses();\r\n    \r\n    const [currentBalance, setCurrentBalance] = useState(client.balance - totalExpenses);\r\n\r\n    const addBudget = (e) => {\r\n        e.preventDefault();\r\n        setModalValue({title: '', amount: ''});\r\n        setModalAction('add');\r\n        setIsModalOpen(true);\r\n    }\r\n\r\n    const saveBudget = (amount, title) => {\r\n        amount = parseFloat(amount);\r\n        if(amount > 0) {\r\n            // deduct current balance\r\n            setCurrentBalance(currentBalance - amount);\r\n            // add this budget to budgetList\r\n            const newBudgetList = [{title: title, amount: amount}, ...budgetList];\r\n            setBudgetList(newBudgetList);\r\n            // close\r\n            setIsModalOpen(false);\r\n            // save into localStorage this new budget\r\n            saveBudgetToDB(client.number, newBudgetList);\r\n        }\r\n    }\r\n\r\n    const updateBudget = ({id, amount, title}) => {\r\n        const budget = budgetList[id];\r\n        budget.title = title;\r\n        budget.amount = amount;\r\n\r\n        setBudgetList(budgetList);\r\n        saveBudgetToDB(client.number, budgetList);\r\n        const total = getTotalExpenses(budgetList);\r\n        // compute total balance\r\n        setCurrentBalance(client.balance - total);\r\n        setIsModalOpen(false);\r\n    }\r\n\r\n    const editRow = (index) => {\r\n        const budget = budgetList[index];\r\n        budget.id = index;\r\n\r\n        setModalValue(budget);\r\n        setModalAction('edit');\r\n        setIsModalOpen(true);\r\n    }\r\n\r\n    const deleteRow = (index) => {\r\n        // get all budgetlist except the index\r\n        const filteredBudget = budgetList.filter((item, budgetIndex) => {\r\n            return  index !== budgetIndex;\r\n        })\r\n\r\n        setCurrentBalance(currentBalance + budgetList[index].amount);\r\n        setBudgetList(filteredBudget);\r\n        saveBudgetToDB(client.number, filteredBudget);\r\n    }\r\n\r\n    const modal = isModalOpen ? <BudgetModal \r\n                  title={modalValue.title}\r\n                  id={modalValue.id}\r\n                  amount={modalValue.amount}\r\n                  modalAction={modalAction} \r\n                  setIsModalOpen={setIsModalOpen}\r\n                  saveBudget={saveBudget} \r\n                  updateBudget={updateBudget} /> : '';\r\n\r\n\r\n    const budget = budgetList.map((item, index) => {\r\n        const style = index % 2 === 0 ? 'even' : 'odd';\r\n        return (\r\n            <div className={`budget-row ${style}`}>\r\n                <div className=\"budget-title\">\r\n                    <button type=\"button\" onClick={() => deleteRow(index)} className=\"mr\"><i class='bx bxs-x-square' ></i></button>\r\n                    <button type=\"button\" onClick={() => editRow(index)} className=\"mr\"><i class='bx bx-edit-alt' ></i></button>\r\n                    <span onClick={() => editRow(index)}>{item.title}</span>\r\n                </div>\r\n                <div>{formatNumber(item.amount)}</div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div id=\"main-content\">\r\n            <form id=\"form\" className=\"budget\">\r\n                <h1>Budget App</h1>\r\n                <div>Start budgeting your money with our built in app.</div>\r\n\r\n                <div id=\"budget\">\r\n                    <div className=\"budget-menu\">\r\n                        <div>\r\n                            <button className=\"btn2\" onClick={addBudget}><i className='bx bx-book-add'></i> Add budget</button>\r\n                        </div>\r\n                        <div>\r\n                          <label>Remaining Budget</label>\r\n                          <h1 className={ currentBalance < 0 ? 'danger' : '' }>{formatNumber(currentBalance)}</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"budget-body\">\r\n                        {budget}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {modal}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BudgetModal = (props) => {\r\n    const { saveBudget, updateBudget, setIsModalOpen, title, amount, modalAction, id} = props;\r\n    const [modalValue, setModalValue] = useState({id: id, title: title, amount: amount });\r\n    // add or edit?\r\n    const [action, setAction] = useState(modalAction);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(action === 'add') {\r\n            saveBudget(modalValue.amount, modalValue.title);\r\n        }\r\n\r\n        if(action === 'edit') {\r\n            updateBudget(modalValue);\r\n\r\n        }\r\n    }\r\n\r\n    const onChangeDescription = (e) => {\r\n        setModalValue({...modalValue, title: e.target.value});\r\n    }\r\n\r\n    const onChangeAmount = (e) => {\r\n        setModalValue({...modalValue, amount: parseFloat(e.target.value)});\r\n    }\r\n\r\n    return (<div className=\"overlay\">\r\n        <div className=\"modal\">\r\n            <form onSubmit={onSubmit}>\r\n                <h2 className=\"title\">{action} budget</h2>\r\n                <label>description</label>\r\n                <textarea name=\"title\" onChange={onChangeDescription} defaultValue={modalValue.title}></textarea>\r\n                <label>Amount</label>\r\n                <input type=\"number\" name=\"amount\" onChange={onChangeAmount} value={modalValue.amount} autoComplete=\"off\" />\r\n                <button type=\"button\" onClick={() => setIsModalOpen(false)} className=\"btn2 btn-muted\">Cancel</button>\r\n                <button type=\"submit\" className=\"btn2\">{action} Budget</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { MainClientContent } from './MainClientContent';\r\nimport { findAccount } from './Utils';\r\nimport { TransferPage } from './TransferPage';\r\nimport { BudgetApp } from './BudgetApp';\r\n\r\nexport const ClientDashboard = (props) => {\r\n    const { logout, client, setClient } = props;\r\n    const [users, setUsers] = useState(props.users);\r\n    const [ page, setPage ] = useState('home');\r\n\r\n  \r\n    const changePageHandler = (pageName) => {\r\n      setPage(pageName);\r\n      const currentUser = findAccount(client.number);\r\n      setClient(currentUser);\r\n    }\r\n  \r\n    if(page === 'home') {\r\n      \r\n      return (\r\n        <main>\r\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\r\n          <MainClientContent user={client} />\r\n        </main>\r\n      )\r\n    }\r\n  \r\n    if(page === 'budget') {\r\n      return (\r\n        <main>\r\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\r\n          <BudgetApp client={client} />\r\n        </main>\r\n      )\r\n    }\r\n  \r\n    if(page === 'transfer') {\r\n      return (\r\n        <main>\r\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\r\n          <TransferPage isClient=\"true\" client={client} setClient={setClient} users={users} setUsers={setUsers}  />\r\n        </main>\r\n      )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport DATA from '../data';\r\nimport { Dashboard } from './Dashboard';\r\nimport { LoginPage } from './LoginPage';\r\nimport { ClientDashboard } from './ClientDashboard';\r\n\r\nexport const Authenticate = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [notif, setNotif] = useState({ message: '', style: '' });\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [client, setClient] = useState(null);\r\n  const localUsers = localStorage.getItem('users');\r\n\r\n  if (!localUsers) {\r\n    localStorage.setItem('users', JSON.stringify(DATA));\r\n  }\r\n\r\n  const clients = JSON.parse(localStorage.getItem('users'));\r\n\r\n  const isLoginSuccess = (email, password) => {\r\n    let isFound = false;\r\n\r\n    clients.forEach((user) => {\r\n      if (user.email === email && user.password === password) {\r\n        if (user.isAdmin) {\r\n          setIsAdmin(true);\r\n          setClient(user);\r\n          isFound = true;\r\n        } else {\r\n          setIsAdmin(false);\r\n          setClient(user);\r\n          isFound = true;\r\n        }\r\n        setNotif('');\r\n      }\r\n    });\r\n\r\n    if (!isFound)\r\n      setNotif({ message: 'Wrong username and password.', style: 'danger' });\r\n    return isFound;\r\n  };\r\n\r\n  const login = (username, password) => {\r\n    if (isLoginSuccess(username, password)) {\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem('client');\r\n    setNotif({ message: 'You have logged out.', style: 'success' });\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    localStorage.setItem('currentUser', JSON.stringify(client));\r\n    if (isAdmin) {\r\n      return <Dashboard users={clients} logoutHandler={logout} />;\r\n    } else {\r\n      return (\r\n        <ClientDashboard\r\n          client={client}\r\n          users={clients}\r\n          setClient={setClient}\r\n          logout={logout}\r\n        />\r\n      );\r\n    }\r\n  } else {\r\n    return (\r\n      <LoginPage loginHandler={login} notif={notif} isLoggedIn={isLoggedIn} />\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Authenticate } from './components/Authenticate';\r\n\r\nfunction App() {\r\n  return (\r\n    <Authenticate />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}